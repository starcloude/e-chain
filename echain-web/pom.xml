<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  
  	<parent>
		<groupId>com.echain</groupId>
		<artifactId>echain</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
  
  <artifactId>echain-web</artifactId>
  <name>echain-web</name>
  <url>http://maven.apache.org</url>
  
  <dependencies>
    <dependency>
      <groupId>com.echain</groupId>
      <artifactId>echain-service</artifactId>
    </dependency>
    
    	<!-- web启动器 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
		<!-- 测试 -->
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-test</artifactId>
		    <exclusions>
		    	<exclusion>
		    		<groupId>com.jayway.jsonpath</groupId>
  					<artifactId>json-path</artifactId>
		    	</exclusion>
		    </exclusions>
		    <scope>test</scope>
		</dependency>
		
		<!-- 监控 -->
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
				
		<!-- 开发工具 -->
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-devtools</artifactId>
		    <optional>true</optional>
		</dependency>
		
		<!-- 配置文件提示 -->
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-configuration-processor</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-web</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.apache.commons</groupId>
		    <artifactId>commons-pool2</artifactId>
		</dependency>
		
		<!-- shiro -->
		<dependency>
			<groupId>org.apache.shiro</groupId>
			<artifactId>shiro-spring</artifactId>
			<version>1.4.1</version>
		</dependency>
		<dependency>
		    <groupId>com.github.whvcse</groupId>
		    <artifactId>easy-captcha</artifactId>
		</dependency>
	    <dependency>
	      <groupId>junit</groupId>
	      <artifactId>junit</artifactId>
	      <scope>test</scope>
	    </dependency>
	    
	    <!-- okhttp -->
	    <dependency>
		    <groupId>com.squareup.okhttp3</groupId>
		    <artifactId>okhttp</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>com.parkingwang</groupId>
		    <artifactId>okhttp3-loginterceptor</artifactId>
		    <version>0.5</version>
		</dependency>
		    
  </dependencies>
  <build>
		<finalName>${project.artifactId}</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.*</include>
				</includes>
				<!-- 线上打包的时候 ,不需要把dat打包进去 -->
				<excludes>
					<exclude>*.dat</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>../configs</directory>
				<filtering>true</filtering>
			</resource>
			
		</resources>
		<plugins>
			<!-- 字体库,图标,不显示问题 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<nonFilteredFileExtensions>
						<nonFilteredFileExtension>woff</nonFilteredFileExtension>
						<nonFilteredFileExtension>woff2</nonFilteredFileExtension>
						<nonFilteredFileExtension>eot</nonFilteredFileExtension>
						<nonFilteredFileExtension>ttf</nonFilteredFileExtension>
						<nonFilteredFileExtension>svg</nonFilteredFileExtension>
					</nonFilteredFileExtensions>
				</configuration>
			</plugin>
		    <!-- 指定启动类，将依赖打成外部jar包 -->
		    <plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-jar-plugin</artifactId>
		        <configuration>
		            <archive>
		                <!-- 生成的jar中，不要包含pom.xml和pom.properties这两个文件 -->
		                <addMavenDescriptor>false</addMavenDescriptor>
		                <manifest>
		                    <!-- 是否要把第三方jar加入到类构建路径 -->
		                    <addClasspath>true</addClasspath>
		                    <!-- 外部依赖jar包的最终位置 -->
		                    <classpathPrefix>lib/</classpathPrefix>
		                    <!-- 项目启动类 -->
		                    <mainClass>com.echain.BootStrap</mainClass>
		                </manifest>
		            </archive>
		            
		            <excludes>
		            	<!-- 前后端要独立部署,那么就排除掉META-INF里的resources即可 -->
		            	<!-- 
						<exclude>META-INF/resources/**</exclude>
		            	 -->
						<exclude>sh/**</exclude>
						<exclude>application-*.properties</exclude>
		            </excludes>
		        </configuration>
		    </plugin>
		    <!--拷贝依赖到jar外面的lib目录-->
		    <plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-dependency-plugin</artifactId>
		        <executions>
		            <execution>
		                <id>copy-lib</id>
		                <phase>package</phase>
		                <goals>
		                    <goal>copy-dependencies</goal>
		                </goals>
		                <configuration>
		                    <outputDirectory>target/lib</outputDirectory>
		                    <excludeTransitive>false</excludeTransitive>
		                    <stripVersion>false</stripVersion>
		                    <includeScope>runtime</includeScope>
		                </configuration>
		            </execution>
		        </executions>
		    </plugin>
		</plugins>

	</build>
</project>
